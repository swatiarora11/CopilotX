"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const models_1 = require("../generated/artifacts/models");
class BlobLeaseAdapter {
    constructor(blob) {
        if (blob.properties.leaseState === undefined) {
            blob.properties.leaseState = models_1.LeaseStateType.Available;
            // throw RangeError(
            //   `BlobLeaseAdapter:constructor() blob leaseState cannot be undefined.`
            // );
        }
        if (blob.properties.leaseStatus === undefined) {
            blob.properties.leaseStatus = models_1.LeaseStatusType.Unlocked;
            // throw RangeError(
            //   `BlobLeaseAdapter:constructor() blob leaseStatus cannot be undefined.`
            // );
        }
        this.leaseId = blob.leaseId;
        this.leaseState = blob.properties.leaseState;
        this.leaseStatus = blob.properties.leaseStatus;
        this.leaseDurationType = blob.properties.leaseDuration;
        this.leaseDurationSeconds = blob.leaseDurationSeconds;
        this.leaseExpireTime = blob.leaseExpireTime;
        this.leaseBreakTime = blob.leaseBreakTime;
    }
    toString() {
        return JSON.stringify({
            leaseId: this.leaseId,
            leaseState: this.leaseState,
            leaseStatus: this.leaseStatus,
            leaseDurationType: this.leaseDurationType,
            leaseDurationSeconds: this.leaseDurationSeconds,
            leaseExpireTime: this.leaseExpireTime,
            leaseBreakTime: this.leaseBreakTime
        });
    }
}
exports.default = BlobLeaseAdapter;
//# sourceMappingURL=BlobLeaseAdapter.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperationAccountSASPermission = void 0;
const tslib_1 = require("tslib");
const operation_1 = tslib_1.__importDefault(require("../generated/artifacts/operation"));
const AccountSASPermissions_1 = require("../../common/authentication/AccountSASPermissions");
const AccountSASResourceTypes_1 = require("../../common/authentication/AccountSASResourceTypes");
const AccountSASServices_1 = require("../../common/authentication/AccountSASServices");
class OperationAccountSASPermission {
    constructor(service, resourceType, permission) {
        this.service = service;
        this.resourceType = resourceType;
        this.permission = permission;
    }
    validate(services, resourceTypes, permissions) {
        return (this.validateServices(services) &&
            this.validateResourceTypes(resourceTypes) &&
            this.validatePermissions(permissions));
    }
    validateServices(services) {
        return services.toString().includes(this.service);
    }
    validateResourceTypes(resourceTypes) {
        // Only blob batch operation allows Any resource types.
        if (this.resourceType === AccountSASResourceTypes_1.AccountSASResourceType.Any) {
            return resourceTypes.toString() !== "";
        }
        for (const p of this.resourceType) {
            if (resourceTypes.toString().includes(p)) {
                return true;
            }
        }
        return false;
    }
    validatePermissions(permissions) {
        // Only blob batch operation allows Any permissions.
        if (this.permission === AccountSASPermissions_1.AccountSASPermission.Any) {
            return permissions.toString() !== "";
        }
        for (const p of this.permission) {
            if (permissions.toString().includes(p)) {
                return true;
            }
        }
        return false;
    }
}
exports.OperationAccountSASPermission = OperationAccountSASPermission;
// See https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas
// TODO: Check all required operations
const OPERATION_ACCOUNT_SAS_PERMISSIONS = new Map();
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_GetAccountInfo, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service +
    AccountSASResourceTypes_1.AccountSASResourceType.Container +
    AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Create +
    AccountSASPermissions_1.AccountSASPermission.Delete +
    AccountSASPermissions_1.AccountSASPermission.List +
    AccountSASPermissions_1.AccountSASPermission.Process +
    AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Update +
    AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_GetAccountInfoWithHead, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service +
    AccountSASResourceTypes_1.AccountSASResourceType.Container +
    AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Create +
    AccountSASPermissions_1.AccountSASPermission.Delete +
    AccountSASPermissions_1.AccountSASPermission.List +
    AccountSASPermissions_1.AccountSASPermission.Process +
    AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Update +
    AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_GetAccountInfo, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service +
    AccountSASResourceTypes_1.AccountSASResourceType.Container +
    AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Create +
    AccountSASPermissions_1.AccountSASPermission.Delete +
    AccountSASPermissions_1.AccountSASPermission.List +
    AccountSASPermissions_1.AccountSASPermission.Process +
    AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Update +
    AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_GetAccountInfoWithHead, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service +
    AccountSASResourceTypes_1.AccountSASResourceType.Container +
    AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Create +
    AccountSASPermissions_1.AccountSASPermission.Delete +
    AccountSASPermissions_1.AccountSASPermission.List +
    AccountSASPermissions_1.AccountSASPermission.Process +
    AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Update +
    AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_GetAccountInfo, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service +
    AccountSASResourceTypes_1.AccountSASResourceType.Container +
    AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Create +
    AccountSASPermissions_1.AccountSASPermission.Delete +
    AccountSASPermissions_1.AccountSASPermission.List +
    AccountSASPermissions_1.AccountSASPermission.Process +
    AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Update +
    AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_GetAccountInfoWithHead, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service +
    AccountSASResourceTypes_1.AccountSASResourceType.Container +
    AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Create +
    AccountSASPermissions_1.AccountSASPermission.Delete +
    AccountSASPermissions_1.AccountSASPermission.List +
    AccountSASPermissions_1.AccountSASPermission.Process +
    AccountSASPermissions_1.AccountSASPermission.Read +
    AccountSASPermissions_1.AccountSASPermission.Update +
    AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_ListContainersSegment, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service, AccountSASPermissions_1.AccountSASPermission.List));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_GetProperties, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_SetProperties, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_SubmitBatch, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Any, AccountSASPermissions_1.AccountSASPermission.Any));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_GetStatistics, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Service, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_Create, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Create + AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_SetAccessPolicy, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, "" // NOT ALLOWED
));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_GetAccessPolicy, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, "" // NOT ALLOWED
));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_GetProperties, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_GetPropertiesWithHead, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Read));
// TODO: Get container metadata is missing in swagger
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_SetMetadata, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_BreakLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Delete));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_RenewLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_ChangeLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_AcquireLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_ReleaseLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_Delete, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Delete));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_ListBlobHierarchySegment, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.List));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_ListBlobFlatSegment, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.List));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.BlockBlob_Upload, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, 
// Create permission is only available for non existing block blob. Handle this scenario separately
AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Create));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.PageBlob_Create, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, 
// Create permission is only available for non existing page blob. Handle this scenario separately
AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Create));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.AppendBlob_Create, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, 
// Create permission is only available for non existing append blob. Handle this scenario separately
AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Create));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_Download, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_GetProperties, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_SetHTTPHeaders, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
// TODO: Get blob metadata is missing in swagger
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_GetProperties, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_SetMetadata, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_Delete, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Delete));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_BreakLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Delete + AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_RenewLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_ChangeLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_AcquireLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_ReleaseLease, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_CreateSnapshot, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Create));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_StartCopyFromURL, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, 
// If destination is an existing blob, create permission is not enough
AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Create));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_CopyFromURL, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, 
// If destination is an existing blob, create permission is not enough
AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Create));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.PageBlob_CopyIncremental, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write + AccountSASPermissions_1.AccountSASPermission.Create));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_AbortCopyFromURL, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.BlockBlob_StageBlock, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.BlockBlob_CommitBlockList, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.BlockBlob_GetBlockList, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.PageBlob_UploadPages, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.PageBlob_GetPageRanges, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.PageBlob_GetPageRangesDiff, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Read));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.AppendBlob_AppendBlock, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Add + AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.PageBlob_ClearPages, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_SetTier, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.PageBlob_UpdateSequenceNumber, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Write));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_SetTags, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Tag));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Blob_GetTags, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Tag));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Service_FilterBlobs, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Object, AccountSASPermissions_1.AccountSASPermission.Filter));
OPERATION_ACCOUNT_SAS_PERMISSIONS.set(operation_1.default.Container_FilterBlobs, new OperationAccountSASPermission(AccountSASServices_1.AccountSASService.Blob, AccountSASResourceTypes_1.AccountSASResourceType.Container, AccountSASPermissions_1.AccountSASPermission.Filter));
exports.default = OPERATION_ACCOUNT_SAS_PERMISSIONS;
//# sourceMappingURL=OperationAccountSASPermission.js.map
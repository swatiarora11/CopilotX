"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS = exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS = exports.OperationBlobSASPermission = void 0;
const tslib_1 = require("tslib");
const operation_1 = tslib_1.__importDefault(require("../generated/artifacts/operation"));
const BlobSASPermissions_1 = require("./BlobSASPermissions");
const ContainerSASPermissions_1 = require("./ContainerSASPermissions");
class OperationBlobSASPermission {
    constructor(permission = "") {
        this.permission = permission;
    }
    validate(permissions) {
        return this.validatePermissions(permissions);
    }
    validatePermissions(permissions) {
        // Only blob batch operation allows Any permissions.
        if (this.permission === ContainerSASPermissions_1.ContainerSASPermission.Any) {
            return permissions.toString() !== "";
        }
        for (const p of this.permission) {
            if (permissions.toString().includes(p)) {
                return true;
            }
        }
        return false;
    }
}
exports.OperationBlobSASPermission = OperationBlobSASPermission;
// See https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas
// Blob Service SAS Permissions for blob level
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS = new Map();
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Service_SetProperties, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Service_GetProperties, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Service_GetStatistics, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Service_ListContainersSegment, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Service_GetAccountInfo, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Service_GetAccountInfoWithHead, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_Create, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_GetProperties, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_GetPropertiesWithHead, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_Delete, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_SetMetadata, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_GetAccessPolicy, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_SetAccessPolicy, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_AcquireLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_ReleaseLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_RenewLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_BreakLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_ChangeLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_ListBlobFlatSegment, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_ListBlobHierarchySegment, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_GetAccountInfo, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Container_GetAccountInfoWithHead, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_Download, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_GetProperties, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_Delete, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Delete));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_Undelete, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write) // TODO: Not sure
);
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_SetHTTPHeaders, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_SetMetadata, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_AcquireLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_ReleaseLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_RenewLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_ChangeLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_BreakLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Delete + BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_CreateSnapshot, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Create + BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_StartCopyFromURL, 
// TODO: When destination blob doesn't exist, needs create permission
new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_AbortCopyFromURL, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_CopyFromURL, 
// TODO: When destination blob doesn't exist, needs create permission
new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_SetTier, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write) // TODO: Not sure
);
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_GetAccountInfo, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_GetAccountInfoWithHead, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_Create, 
// TODO: When destination blob doesn't exist, needs create permission
new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Create + BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_UploadPages, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_ClearPages, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_GetPageRanges, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_GetPageRangesDiff, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_Resize, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_UpdateSequenceNumber, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.PageBlob_CopyIncremental, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.AppendBlob_Create, 
// TODO: When destination blob doesn't exist, needs create permission
new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.AppendBlob_AppendBlock, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Add + BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.BlockBlob_Upload, 
// TODO: When destination blob doesn't exist, needs create permission
new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.BlockBlob_StageBlock, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.BlockBlob_StageBlockFromURL, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.BlockBlob_CommitBlockList, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.BlockBlob_GetBlockList, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_SetTags, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Tag));
exports.OPERATION_BLOB_SAS_BLOB_PERMISSIONS.set(operation_1.default.Blob_GetTags, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Tag));
// Blob Service SAS Permissions for container level
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS = new Map();
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Service_SetProperties, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Service_GetProperties, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Service_GetStatistics, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Service_ListContainersSegment, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Service_GetAccountInfo, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Service_GetAccountInfoWithHead, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_Create, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_GetProperties, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_GetPropertiesWithHead, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_Delete, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_SetMetadata, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_SubmitBatch, new OperationBlobSASPermission(ContainerSASPermissions_1.ContainerSASPermission.Any));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_GetAccessPolicy, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_SetAccessPolicy, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_AcquireLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_ReleaseLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_RenewLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_BreakLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_ChangeLease, new OperationBlobSASPermission());
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_ListBlobFlatSegment, new OperationBlobSASPermission(ContainerSASPermissions_1.ContainerSASPermission.List));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_ListBlobHierarchySegment, new OperationBlobSASPermission(ContainerSASPermissions_1.ContainerSASPermission.List));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_GetAccountInfo, new OperationBlobSASPermission(ContainerSASPermissions_1.ContainerSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Container_GetAccountInfoWithHead, new OperationBlobSASPermission(ContainerSASPermissions_1.ContainerSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_Download, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_GetProperties, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_Delete, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Delete));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_Undelete, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write) // TODO: Not sure
);
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_SetHTTPHeaders, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_SetMetadata, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_AcquireLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_ReleaseLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_RenewLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_ChangeLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_BreakLease, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Delete));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_CreateSnapshot, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_StartCopyFromURL, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_AbortCopyFromURL, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_CopyFromURL, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_SetTier, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_GetAccountInfo, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_GetAccountInfoWithHead, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_Create, new OperationBlobSASPermission(
// TODO: When destination blob doesn't exist, needs create permission
BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_UploadPages, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_ClearPages, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_GetPageRanges, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_GetPageRangesDiff, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_Resize, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_UpdateSequenceNumber, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.PageBlob_CopyIncremental, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.AppendBlob_Create, 
// TODO: Create a new blob must be write
new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.AppendBlob_AppendBlock, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Add + BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.BlockBlob_Upload, 
// Create a new blob, must be write
new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write + BlobSASPermissions_1.BlobSASPermission.Create));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.BlockBlob_StageBlock, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.BlockBlob_StageBlockFromURL, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.BlockBlob_CommitBlockList, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Write));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.BlockBlob_GetBlockList, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Read));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_SetTags, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Tag));
exports.OPERATION_BLOB_SAS_CONTAINER_PERMISSIONS.set(operation_1.default.Blob_GetTags, new OperationBlobSASPermission(BlobSASPermissions_1.BlobSASPermission.Tag));
//# sourceMappingURL=OperationBlobSASPermission.js.map
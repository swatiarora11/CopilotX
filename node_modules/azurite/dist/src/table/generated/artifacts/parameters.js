"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.version = exports.url = exports.top = exports.timeout = exports.table = exports.select = exports.rowKey = exports.restype = exports.responsePreference = exports.requestId = exports.partitionKey = exports.nextTableName = exports.nextRowKey = exports.nextPartitionKey = exports.multipartContentType = exports.ifMatch1 = exports.ifMatch0 = exports.format = exports.filter = exports.dataServiceVersion = exports.contentLength = exports.comp2 = exports.comp1 = exports.comp0 = void 0;
exports.comp0 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'acl',
        type: {
            name: "String"
        }
    }
};
exports.comp1 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'properties',
        type: {
            name: "String"
        }
    }
};
exports.comp2 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'stats',
        type: {
            name: "String"
        }
    }
};
exports.contentLength = {
    parameterPath: "contentLength",
    mapper: {
        required: true,
        serializedName: "Content-Length",
        type: {
            name: "Number"
        }
    }
};
exports.dataServiceVersion = {
    parameterPath: [
        "options",
        "dataServiceVersion"
    ],
    mapper: {
        serializedName: "DataServiceVersion",
        type: {
            name: "String"
        }
    }
};
exports.filter = {
    parameterPath: [
        "options",
        "queryOptions",
        "filter"
    ],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
exports.format = {
    parameterPath: [
        "options",
        "queryOptions",
        "format"
    ],
    mapper: {
        serializedName: "$format",
        type: {
            name: "String"
        }
    }
};
exports.ifMatch0 = {
    parameterPath: [
        "options",
        "ifMatch"
    ],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
exports.ifMatch1 = {
    parameterPath: "ifMatch",
    mapper: {
        required: true,
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
exports.multipartContentType = {
    parameterPath: "multipartContentType",
    mapper: {
        required: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
exports.nextPartitionKey = {
    parameterPath: [
        "options",
        "nextPartitionKey"
    ],
    mapper: {
        serializedName: "NextPartitionKey",
        type: {
            name: "String"
        }
    }
};
exports.nextRowKey = {
    parameterPath: [
        "options",
        "nextRowKey"
    ],
    mapper: {
        serializedName: "NextRowKey",
        type: {
            name: "String"
        }
    }
};
exports.nextTableName = {
    parameterPath: [
        "options",
        "nextTableName"
    ],
    mapper: {
        serializedName: "NextTableName",
        type: {
            name: "String"
        }
    }
};
exports.partitionKey = {
    parameterPath: "partitionKey",
    mapper: {
        required: true,
        serializedName: "partitionKey",
        type: {
            name: "String"
        }
    }
};
exports.requestId = {
    parameterPath: [
        "options",
        "requestId"
    ],
    mapper: {
        serializedName: "x-ms-client-request-id",
        type: {
            name: "String"
        }
    }
};
exports.responsePreference = {
    parameterPath: [
        "options",
        "responsePreference"
    ],
    mapper: {
        serializedName: "Prefer",
        type: {
            name: "String"
        }
    }
};
exports.restype = {
    parameterPath: "restype",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "restype",
        defaultValue: 'service',
        type: {
            name: "String"
        }
    }
};
exports.rowKey = {
    parameterPath: "rowKey",
    mapper: {
        required: true,
        serializedName: "rowKey",
        type: {
            name: "String"
        }
    }
};
exports.select = {
    parameterPath: [
        "options",
        "queryOptions",
        "select"
    ],
    mapper: {
        serializedName: "$select",
        type: {
            name: "String"
        }
    }
};
exports.table = {
    parameterPath: "table",
    mapper: {
        required: true,
        serializedName: "table",
        type: {
            name: "String"
        }
    }
};
exports.timeout = {
    parameterPath: [
        "options",
        "timeout"
    ],
    mapper: {
        serializedName: "timeout",
        constraints: {
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
exports.top = {
    parameterPath: [
        "options",
        "queryOptions",
        "top"
    ],
    mapper: {
        serializedName: "$top",
        constraints: {
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
exports.url = {
    parameterPath: "url",
    mapper: {
        required: true,
        serializedName: "url",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
exports.version = {
    parameterPath: "version",
    mapper: {
        serializedName: "x-ms-version",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map
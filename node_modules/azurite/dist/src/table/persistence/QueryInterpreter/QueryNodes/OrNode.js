"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const BinaryOperatorNode_1 = tslib_1.__importDefault(require("./BinaryOperatorNode"));
/**
 * Represents a logical OR operation between two nodes.
 *
 * This is used in queries which resemble the following:
 *
 *   (PartitionKey eq 'foo') or (RowKey eq 'bar')
 *
 * In this case, the `OrNode` would be the root node, with the left and right nodes
 * corresponding to `(PartitionKey eq 'foo')` and `(RowKey eq 'bar')`, respectively.
 */
class OrNode extends BinaryOperatorNode_1.default {
    get name() {
        return `or`;
    }
    evaluate(context) {
        return this.left.evaluate(context) || this.right.evaluate(context);
    }
}
exports.default = OrNode;
//# sourceMappingURL=OrNode.js.map
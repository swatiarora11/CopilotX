"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEdmType = exports.EdmType = void 0;
var EdmType;
(function (EdmType) {
    EdmType[EdmType["Binary"] = 0] = "Binary";
    EdmType[EdmType["Boolean"] = 1] = "Boolean";
    EdmType[EdmType["DateTime"] = 2] = "DateTime";
    EdmType[EdmType["Double"] = 3] = "Double";
    EdmType[EdmType["Guid"] = 4] = "Guid";
    EdmType[EdmType["Int32"] = 5] = "Int32";
    EdmType[EdmType["Int64"] = 6] = "Int64";
    EdmType[EdmType["String"] = 7] = "String";
    EdmType[EdmType["Null"] = 8] = "Null";
})(EdmType || (exports.EdmType = EdmType = {}));
function getEdmType(type) {
    switch (type) {
        case "Edm.Binary":
            return EdmType.Binary;
        case "Edm.Boolean":
            return EdmType.Boolean;
        case "Edm.DateTime":
            return EdmType.DateTime;
        case "Edm.Double":
            return EdmType.Double;
        case "Edm.Guid":
            return EdmType.Guid;
        case "Edm.Int32":
            return EdmType.Int32;
        case "Edm.Int64":
            return EdmType.Int64;
        case "Edm.String":
            return EdmType.String;
        case "Edm.Null":
            return EdmType.Null;
        default:
            throw TypeError(`${type} is not a valid Edm Type.`);
    }
}
exports.getEdmType = getEdmType;
//# sourceMappingURL=IEdmType.js.map
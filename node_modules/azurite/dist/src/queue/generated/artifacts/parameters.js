"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.visibilitytimeout1 = exports.visibilitytimeout0 = exports.version = exports.url = exports.timeout = exports.restype = exports.requestId = exports.prefix = exports.popReceipt = exports.peekonly = exports.numberOfMessages = exports.metadata = exports.messageTimeToLive = exports.maxresults = exports.marker = exports.include = exports.comp4 = exports.comp3 = exports.comp2 = exports.comp1 = exports.comp0 = void 0;
const tslib_1 = require("tslib");
// tslint:disable:quotemark
// tslint:disable:object-literal-sort-keys
const msRest = tslib_1.__importStar(require("@azure/ms-rest-js"));
exports.comp0 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'properties',
        type: {
            name: "String"
        }
    }
};
exports.comp1 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'stats',
        type: {
            name: "String"
        }
    }
};
exports.comp2 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'list',
        type: {
            name: "String"
        }
    }
};
exports.comp3 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'metadata',
        type: {
            name: "String"
        }
    }
};
exports.comp4 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'acl',
        type: {
            name: "String"
        }
    }
};
exports.include = {
    parameterPath: [
        "options",
        "include"
    ],
    mapper: {
        serializedName: "include",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Enum",
                    allowedValues: [
                        "metadata"
                    ]
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
exports.marker = {
    parameterPath: [
        "options",
        "marker"
    ],
    mapper: {
        serializedName: "marker",
        type: {
            name: "String"
        }
    }
};
exports.maxresults = {
    parameterPath: [
        "options",
        "maxresults"
    ],
    mapper: {
        serializedName: "maxresults",
        constraints: {
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
exports.messageTimeToLive = {
    parameterPath: [
        "options",
        "messageTimeToLive"
    ],
    mapper: {
        serializedName: "messagettl",
        constraints: {
            InclusiveMinimum: -1
        },
        type: {
            name: "Number"
        }
    }
};
exports.metadata = {
    parameterPath: [
        "options",
        "metadata"
    ],
    mapper: {
        serializedName: "x-ms-meta",
        type: {
            name: "Dictionary",
            value: {
                type: {
                    name: "String"
                }
            }
        },
        headerCollectionPrefix: "x-ms-meta-"
    }
};
exports.numberOfMessages = {
    parameterPath: [
        "options",
        "numberOfMessages"
    ],
    mapper: {
        serializedName: "numofmessages",
        constraints: {
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
exports.peekonly = {
    parameterPath: "peekonly",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "peekonly",
        defaultValue: 'true',
        type: {
            name: "String"
        }
    }
};
exports.popReceipt = {
    parameterPath: "popReceipt",
    mapper: {
        required: true,
        serializedName: "popreceipt",
        type: {
            name: "String"
        }
    }
};
exports.prefix = {
    parameterPath: [
        "options",
        "prefix"
    ],
    mapper: {
        serializedName: "prefix",
        type: {
            name: "String"
        }
    }
};
exports.requestId = {
    parameterPath: [
        "options",
        "requestId"
    ],
    mapper: {
        serializedName: "x-ms-client-request-id",
        type: {
            name: "String"
        }
    }
};
exports.restype = {
    parameterPath: "restype",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "restype",
        defaultValue: 'service',
        type: {
            name: "String"
        }
    }
};
exports.timeout = {
    parameterPath: [
        "options",
        "timeout"
    ],
    mapper: {
        serializedName: "timeout",
        constraints: {
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
exports.url = {
    parameterPath: "url",
    mapper: {
        required: true,
        serializedName: "url",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
exports.version = {
    parameterPath: "version",
    mapper: {
        serializedName: "x-ms-version",
        type: {
            name: "String"
        }
    }
};
exports.visibilitytimeout0 = {
    parameterPath: [
        "options",
        "visibilitytimeout"
    ],
    mapper: {
        serializedName: "visibilitytimeout",
        type: {
            name: "Number"
        }
    }
};
exports.visibilitytimeout1 = {
    parameterPath: "visibilitytimeout",
    mapper: {
        required: true,
        serializedName: "visibilitytimeout",
        type: {
            name: "Number"
        }
    }
};
//# sourceMappingURL=parameters.js.map
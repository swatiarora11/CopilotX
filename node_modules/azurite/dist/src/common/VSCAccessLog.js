"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class VSCAccessLog {
    constructor(logStream) {
        this.logStream = logStream;
    }
    onStart(serverManager, session) {
        this.logStream.write(`${serverManager.name} is starting...\n`);
    }
    onStartFail(serverManager, session, error) {
        this.logStream.write(`${serverManager.name} starts failed with error: ${error.message} ${error.stack}\n`);
    }
    onStartSuccess(serverManager, session) {
        const server = serverManager.getServer();
        this.logStream.write(`${serverManager.name} successfully listens on ${server.getHttpServerAddress()}\n`);
    }
    onClean(serverManager, session) {
        this.logStream.write(`${serverManager.name} is cleaning.\n`);
    }
    onCleanFail(serverManager, session, error) {
        this.logStream.write(`${serverManager.name} failed to clean with error: ${error.message} ${error.stack}\n`);
    }
    onCleanSuccess(serverManager, session) {
        this.logStream.write(`${serverManager.name} successfully cleaned.\n`);
    }
    onClose(serverManager, session) {
        this.logStream.write(`${serverManager.name} is closing.\n`);
    }
    onCloseFail(serverManager, session, error) {
        this.logStream.write(`${serverManager.name} failed to close with error: ${error.message} ${error.stack}\n`);
    }
    onCloseSuccess(serverManager, session) {
        this.logStream.write(`${serverManager.name} successfully closed.\n`);
    }
}
exports.default = VSCAccessLog;
//# sourceMappingURL=VSCAccessLog.js.map
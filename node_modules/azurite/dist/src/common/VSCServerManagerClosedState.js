"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ConfigurationBase_1 = require("./ConfigurationBase");
const VSCEnvironment_1 = tslib_1.__importDefault(require("./VSCEnvironment"));
const VSCServerManagerRunningState_1 = require("./VSCServerManagerRunningState");
class VSCServerManagerClosedState {
    async start(serverManager) {
        const env = new VSCEnvironment_1.default();
        (0, ConfigurationBase_1.setExtentMemoryLimit)(env, false);
        await serverManager.createImpl();
        await serverManager.startImpl();
        return new VSCServerManagerRunningState_1.VSCServerManagerRunningState();
    }
    async close(serverManager) {
        throw new Error(`Cannot close server. ${serverManager.name} is already closed.`);
    }
    async clean(serverManager) {
        await serverManager.cleanImpl();
        return new VSCServerManagerClosedState();
    }
}
exports.default = VSCServerManagerClosedState;
//# sourceMappingURL=VSCServerManagerClosedState.js.map